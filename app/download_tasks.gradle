/*
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *             http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
tasks.register('downloadTaskFile', Download) {
    src 'https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task'
    dest project.ext.ASSET_DIR + '/hand_landmarker.task'
    overwrite false
}

preBuild.dependsOn downloadTaskFile


tasks.register('downloadZipFile', Download) {
    src 'http://storage.googleapis.com/download.tensorflow.org/models/tflite/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip'
    dest new File(buildDir, 'zips/')
    overwrite false
}


tasks.register('downloadAndUnzipFile', Copy) {
    dependsOn downloadZipFile
    from zipTree(downloadZipFile.dest)
    into project.ext.ASSET_DIR
}


tasks.register('extractModels', Copy) {
    dependsOn downloadAndUnzipFile
}

tasks.configureEach { task ->
    if (task.name == 'assembleDebug') {
        task.dependsOn 'extractModels'
    }
    if (task.name == 'assembleRelease') {
        task.dependsOn 'extractModels'
    }
}


tasks.register('downloadModelFile', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_ssd_mobilenet_v1_1_metadata_2.tflite'
    dest project.ext.ASSET_DIR + '/mobilenetv1.tflite'
    overwrite false
}

tasks.register('downloadModelFile0', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite0_detection_metadata_1.tflite'
    dest project.ext.ASSET_DIR + '/efficientdet-lite0.tflite'
    overwrite false
}

tasks.register('downloadModelFile1', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite1_detection_metadata_1.tflite'
    dest project.ext.ASSET_DIR + '/efficientdet-lite1.tflite'
    overwrite false
}

tasks.register('downloadModelFile2', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite2_detection_metadata_1.tflite'
    dest project.ext.ASSET_DIR + '/efficientdet-lite2.tflite'
    overwrite false
}

tasks.register('copyTestModel', Copy) {
    dependsOn downloadModelFile
    from project.ext.ASSET_DIR + '/mobilenetv1.tflite'
    into project.ext.TEST_ASSETS_DIR
}

preBuild.dependsOn downloadModelFile, downloadModelFile0, downloadModelFile1, downloadModelFile2,
        copyTestModel
